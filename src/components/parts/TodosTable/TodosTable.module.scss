@import '/src/styles/variables.scss';

.wrapper {
	--table-height: calc(100vh - var(--header-height));
	--table-header-height: 36px;
	height: var(--table-height);
	& > .container {
		height: 100%;
		padding: 0;
		overflow: hidden;
		display: flex;
		flex-direction: column;
	}
}
.table {
	flex: 1 1 auto;
	height: 100%;
	position: relative;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@media (min-width: $media-mxl+1+px) {
		border-radius: 10px;
	}
}
.tableHeader {
	flex: 0 0 auto;
	height: var(--table-header-height);
	border-bottom: solid 2px var(--color-bg-secondary);
	@media (min-width: $media-mxl+1+px) {
		display: grid;
		grid-template-columns: repeat(3, 33.1%);
		justify-content: space-between;
	}
}
.cellTitle {
	height: 100%;
	position: relative;
}
.cellTitleText {
	padding: 6px;
	font-size: 18px;
	text-align: center;
}
.sortButton {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	padding-right: 10px;
	background-color: transparent;
	fill: var(--color-icons-main);
	transition: background-color $timer-hover, fill $timer-hover;
	@media (min-width: $media-mxl+1+px) {
		&:hover {
			fill: var(--color-hover);
			background-color: var(--color-bg-main-alpha);
		}
	}
	svg {
		width: 20px;
		height: 20px;
	}
	&.ascending svg {
		transform: rotate(180deg);
	}
}
.tableMain {
	--table-main-height: calc(var(--table-height) - var(--table-header-height) - var(--footer-height));
	flex: 1 1 auto;
	height: var(--table-main-height);
	overflow-y: auto;
	background-color: var(--color-bg-secondary);
}
.cellsWrapper {
	height: auto;
	@media (min-width: $media-mxl+1+px) {
		height: 100%;
		overflow: hidden;
		display: grid;
		grid-template-columns: repeat(3, 33.1%);
		justify-content: space-between;
	}
}
.cell {
	position: relative;
	width: 100%;
	min-height: var(--table-main-height);
	display: flex;
	flex-direction: column;
	@media (min-width: $media-mxl+1+px) {
		height: 100%;
		overflow: hidden;
		.isDragging &.isDragHover {
			&:after {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				display: inline-block;
				width: 100%;
				height: 100%;
				background-color: var(--color-bg-main-alpha);
			}
		}
	}
	@media (max-width: $media-mxl+px) {
		&:not(.activeSlideCell) {
			height: var(--table-main-height);
			&:before {
				content: '';
				position: absolute;
				top: 0;
				left: 0;
				z-index: 5;
				display: inline-block;
				width: 100%;
				height: 10000000000%;
				background-color: inherit;
			}
		}
	}
}
.queue {
	background-color: var(--color-status-queue);
}
.development {
	background-color: var(--color-status-dev);
}
.done {
	background-color: var(--color-status-done);
}
.tasks {
	flex: 1 1 auto;
	height: 100%;
	@media (min-width: $media-mxl+1+px) {
		overflow-x: hidden;
		overflow-y: auto;
		scrollbar-width: thin; // = 8px
		scrollbar-color: var(--color-icons-inactive) transparent; // thumb track
		&::-webkit-scrollbar {
			width: 8px;
		}
		&::-webkit-scrollbar-thumb {
			background: var(--color-icons-inactive);
		}
		&::-webkit-scrollbar-track {
			background: transparent;
		}
	}
}
.task {
	&.preventedDragMove {
		visibility: hidden !important;
		transform: none !important;
	}
}

body .loader, .loadError {
	position: absolute;
	top: 0;
	left: 0;
}
.footer {
	flex: 0 0 var(--footer-height);
}
